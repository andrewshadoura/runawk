======================================================================

runawk: small wrapper for AWK interpreter that impements modules
system and helps one to write the standalone AWK programs.

author:                                  Aleksey Cheusov <vle@gmx.net>

project's home page:            http://sourceforge.net/projects/runawk

licence:                                                   MIT license

======================================================================



                              MOTIVATION

See section MOTIVATION of runawk.1 or runawk.pod.

======================================================================



                             INSTALLATION

0) BSD make is required. I name it just 'make' but its real name may
   vary on different systems.  bmake and pmake are possible names.
   NOTE: GNU make IS NOT GOOD!
   Latest sources of bmake, portable version of NetBSD make,
   is available here:
   http://freshmeat.net/projects/bmake/

   If you need to change the default building options,
   run make like this

     env [YOUR_ASSIGNMENTS] make <target> [YOUR_ASSIGNMENTS]

   See examples section below

1) Uncompress tarball you've downloaded like this
   gzip -dc runawk-X-Y-Z.tar.gz | tar -xf-

2) cd runawk-X.Y.Z

3) make

4) (optional!) make installdirs

5) make install

There are a lot of Makefile variables that can be changed during
installation.  RunAWK's own variables (All they are at the begining of
Makefile):

 PREFIX         - where runawk is installed to            [/usr/local])
 MODULESDIR     - directory where modules are installed to
 AWK_PROG       - path to awk interpreter
 STDIN_FILENAME - path to stdin device file               [-]

BSD make's variables (most commonly used,
for all others - see make's documentation and appropriate .mk files)

 BINDIR - where runawk executable itself is installed to
 MANDIR - where manual pages are installed to

 BINOWN - runawk executable owner
 BINGRP - runawk executable group

 MANOWN - man page owner
 MANGRP - man page group

Examples:
   make installdirs install

   env CC=gcc \
       PREFIX=/home/cheusov/local \
       LDFLAGS='-L/usr/pkg/lib -Wl,-rpath -Wl,/usr/pkg/lib' \
       LDADD=-lextralib \
       CFLAGS='-Werror -Wall -O2 -fomit-frame-pointers' \
       CPPFLAGS=-I/usr/pkg/include \
       BINOWN=cheusov \
       BINGRP=users \
       MANOWN=cheusov \
       MANGRP=users \
       MKCATPAGES=yes \
          make -s all installdirs install

======================================================================

                           MODULES

RunAWK provides lots of AWK modules ready for use. All of them are
under modules/ subdirectory. They are installed by default.

    abort.awk,  alt_assert.awk
                     - power abort() and assert()
    alt_join.awk     - join :-)
    braceexpand.awk  - awk equivalent to shell's braceexpand functionality
    basename.awk, dirname.awk
                     - equivalents to basename(1) and dirname(1)
    embed_str.awk    - reads strings from AWK code
    exitnow.awk      -
    has_prefix.awk, has_suffix.awk
                     - trivial string functions
    match_br.awk     - find pair closed brackets in a string
    max.awk, min.awk, isnum.awk, abs.awk
                     - trivial math functions
    modinfo.awk      - routines to get an information about modules that
                       are in use
    multisub.awk     - another replacement functions
    pow.awk          - synonym for ^
    init_getopt.awk, alt_getopt.awk, power_getopt.awk
                     - POSIX/SUS compatible routines
                       for handling options EASILY ;-)
    readfile.awk     - read an entire file into variable
    runcmd.awk       - safe wrapper over system()
    shquote.awk      - escapes shell's special characters
    heapsort.awk, quicksort.awk, sort.awk
                     - sorting functions
    str2regexp.awk   - string to regexp routines
    tokenre.awk      - alternative mechanism for separating input into tokens
    xclose.awk, xgetline.awk, xsystem.awk
                     - functions to write robust programs
    tmpfile.awk      - generates names of automatically deleted tempfiles
    fieldwidths.awk  - portable equivalent of GNU awk's FIELDWIDTHS ;-)
    CR_in.awk        - removes CR symbols from input lines.
    trim.awk         - functions for trimming spaces from the string.
    trim_in.awk      - trims spaces from input lines.
    backslash_in.awk - treats backslash symbol at the end of line as
                       "this line will continue on the next one".
    ini.awk          - functions for reading Win .ini files.
    ftrans_in.awk    - handle data file transitions
    ord.awk          - character to id and id to character convertors

======================================================================

                           SCRIPTS

RunAWK also provides a few scripts:

   alt_getopt     - program arguments parser aware of long options,
                    alternative to POSIX getopts and getopt(1).

======================================================================

                           EXAMPLES

Lots of examples are available in examples/ subdirectory.

======================================================================

                           PACKAGES

  1) pkgsrc (NetBSD, DragonFlyBSD, Linux, Solaris, ...)

    RunAWK is packages in pkgsrc as wip/runawk.

  2) Debian/lenny/x86

    Add the following lines

        deb     http://mova.org/~cheusov/pub/debian       lenny    main
        deb-src http://mova.org/~cheusov/pub/debian       lenny    main

    to /etc/apt/sources.list and then using apt or aptitude commands.
    Binary packages are available only for Debian/Lenny/i386.
    Ubuntu users need to recompile the package for their system.

  3) FreeBSD

    RunAWK is packages in FreeBSD ports as lang/runawk
